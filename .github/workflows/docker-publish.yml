name: Docker Image CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  verify-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      PUBLIC_URL_DB: ${{ secrets.PUBLIC_URL_DB }}
      PUBLIC_USER: ${{ secrets.PUBLIC_USER }}
      PUBLIC_PASSWORD: ${{ secrets.PUBLIC_PASSWORD }}
      EUREKA_SERVER: ${{ secrets.EUREKA_SERVER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Verify JAR file exists
        run: ls target/microservice-users-0.0.1-SNAPSHOT.jar

      - name: Build Docker image
        run: docker build -t raydberg25/microservice-user:0.0.1-SNAPSHOT .

  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      PUBLIC_URL_DB: ${{ secrets.PUBLIC_URL_DB }}
      PUBLIC_USER: ${{ secrets.PUBLIC_USER }}
      PUBLIC_PASSWORD: ${{ secrets.PUBLIC_PASSWORD }}
      EUREKA_SERVER: ${{ secrets.EUREKA_SERVER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Verify JAR file exists
        run: ls target/microservice-users-0.0.1-SNAPSHOT.jar

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t raydberg25/microservice-user:0.0.1-SNAPSHOT .

      - name: Push Docker image
        run: docker push raydberg25/microservice-user:0.0.1-SNAPSHOT

      - name: Trigger Render Deploy
        run: curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"

      - name: Install Koyeb CLI
        run: |
          if ! command -v koyeb &> /dev/null; then
            curl -sSL https://koyeb.com/install.sh | sh
            echo "${HOME}/.koyeb/bin" >> $GITHUB_PATH
          else
            echo "Koyeb CLI already installed."
          fi

      - name: Redeploy service on Koyeb
        run: koyeb service redeploy yearling-eulalie/microservice-user --token ${{ secrets.KOYEB_API_TOKEN }}